<!-- <h2>Display Data</h2> -->
<% if (jsonData && jsonData.length > 0){ %> <% const sortedData = JSON.parse(jsonData).sort((a, b) => b.id - a.id); %> <% sortedData.forEach((item) => { %>
<section class="display_data">
  <div class="head">
    <!-- ========== convert_id_to_Date... ========== -->
    <% 
    const date = new Date(item.id);
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const year = date.getFullYear();
    const hour = String(date.getHours()).padStart(2, '0');
    const minute = String(date.getMinutes()).padStart(2, '0');
    const formattedDate = `${year}/${month}/${day} ${hour}:${minute}`;
    %>
    <!-- ========== convert_id_to_Date. ========== -->

    <p>
      <span class="mobile_none itemID" id="<%= item.id %>">
      <a href="<%= item.id %>"><%= formattedDate %></a> | </span>
      <span>
        <a href="./name/<%= item.name %>"><%= item.name %></a>
      </span>  
    </p>
    
    <button class="copy-btn">Copy<span class="mobile_none"> code </span></button>
    <%- // include("deleteButton.ejs", { data: item.id }) %>
  </div>

  <div class="container">
    <aside class="line-numbers">
      <span></span>
      <!-- Line numbers will be generated here -->
    </aside>
    <aside class="code-editor">
      <pre><code class="code"><%= item.textarea %></code></pre>
    </aside>
  </div>
</section>
<% }); %> <% } else { %>
<p>No data available.</p>
<% } %>

<script>
  // ========== Textarea with Line Numbers... ==========
  function updateLineNumbers() {
    const codeElements = document.querySelectorAll(".code");
    codeElements.forEach((codeElement) => {
      const lines = codeElement.textContent.split("\n").length;
      const lineNumbersWrapper = codeElement.closest(".container").querySelector(".line-numbers");
      lineNumbersWrapper.innerHTML = "";
      for (let i = 2; i <= lines; i++) {
        const span = document.createElement("span");
        lineNumbersWrapper.appendChild(span);
      }
    });
  }
  // Initial line numbers update
  updateLineNumbers();
  // ========== Textarea with Line Numbers. ==========

  // ========== copy_buttons... ==========
  // Add event listeners for copy buttons
  const copyButtons = document.querySelectorAll(".copy-btn");
  copyButtons.forEach((button) => {
    button.addEventListener("click", function () {
      // const codeElement = this.parentElement.querySelector('code');
      const codeElement = this.parentElement.parentElement.querySelector("code");

      if (codeElement) {
        const text = codeElement.innerText;
        navigator.clipboard
          .writeText(text)
          .then(() => {
            this.textContent = "âœ… Copied!";
            this.classList.add("copy-btn-animation");
            setTimeout(() => {
              this.innerHTML = "Copy<span class='mobile_none'> code </span>";
              this.classList.remove("copy-btn-animation");
            }, 3000);
          })
          .catch((err) => {
            console.error("Failed to copy:", err);
          });
      }
    });
  });
  // ========== copy_buttons. ==========
</script>

<!-- ========== highlight Component... ========== -->
<script src="https://frankgp.com/lib/highlight.js" type="module"></script>
<!-- ========== highlight Component. ========== -->
